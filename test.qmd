
```{r}
#Load libraries
library(Seurat)
library(data.table)
library(ggplot2)
library(dplyr)
library(BiocSingular)
library(scDblFinder)
library(SingleCellExperiment)
library(scater)
library(hdf5r)
```

```{r}
test_data <- readRDS("/home/projects/22102_single_cell_2025/projects/group_1/d72106bd-d03b-45e6-a0fa-ca2a831ef092.rds")
```


```{r}
RenameGenesSeurat <- function(obj,
                              newnames) { # Replace gene names in different slots of a Seurat object. Run this before integration. Run this before integration. It only changes obj@assays$RNA@counts, @data and @scale.data.
  print("Run this before integration. It only changes obj@assays$RNA@counts, @data and @scale.data.")
  RNA <- obj@assays$RNA

  if (nrow(RNA) == length(newnames)) {
    if (length(RNA@counts)) RNA@counts@Dimnames[[1]]            <- newnames
    if (length(RNA@data)) RNA@data@Dimnames[[1]]                <- newnames
    if (length(RNA@scale.data)) RNA@scale.data@Dimnames[[1]]    <- newnames
  } else {"Unequal gene sets: nrow(RNA) != nrow(newnames)"}
  obj@assays$RNA <- RNA
  return(obj)
}
test_data_2 <- test_data

test_data_2 <- RenameGenesSeurat(obj = test_data_2,
                                 newnames = unfactor(test_data_2@assays[["RNA"]]@meta.features[["feature_name"]]))
```
```{r}
genes.use <- stringr::str_extract(unfactor(test_data_2@assays[["RNA"]]@meta.features[["feature_name"]]), pattern = "^(?!ENSG).+") |> na.omit()

subset.matrix <- test_data_2@assays[["RNA"]]$counts[genes.use, ] # Pull the raw expression matrix from the original Seurat object containing only the genes of interest
object2 <- CreateSeuratObject(subset.matrix) # Create a new Seurat object with just the genes of interest
orig.ident <- test_data_2@meta.data # Pull the identities from the original Seurat object as a data.frame
object2 <- AddMetaData(object = object2, metadata = orig.ident) # Add the idents to the meta.data slot
# object2 <- SetAllIdent(object = object2, id = ident.use) # Assign identities for the new Seurat object
```

